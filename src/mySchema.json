{
    "(0010,0010)": {
        "tagName": "Human readable version of hex tag above (optional).",
        "vr": "CS",
        "description": "Description of checks (optional).",
        "checks": [{
            "comment": "Checks must only include a SINGLE operator - they are listed here for demonstrative purposes.",
            "EQUAL": {
                "comment": "If exclusive, Is this tag (0x0001) equal to the literal in 'value' / the value at 'tag'.Else, if value at tag == value.",
                "value": "12",
                "tag": "(0010,0011)"
            },
            "EXIST": {
                "comment": "Does this tag exist or (alternatively) does 'tag' exist?",
                "value": "12",
                "tag": "(0010,0011)"
            },
            "CONTAIN": {
                "comment": "Should be exclusive. Does this tag contain 'value' or the value at 'tag'. TODO: Do we also need to check the other way around?",
                "value": "34",
                "tag": ""
            },
            "REGEX": {
                "comment": "Does the value in this tag conform to the regex?",
                "expression": ""
            },
            "GREATER_THAN": {
                "comment": "Should be exclusive. Is the value in this tag greater than 'value' or the value at 'tag'.",
                "tag": "",
                "value": "s"
            },
            "LESS_THAN": {
                "comment": "Should be exclusive. Is the value in this tag less than 'value' or the value at 'tag'.",
                "tag": "",
                "value": ""
            },
            "COPY": {
                "comment": "Should be exclusive. We can either copy the val of this tag (0x0001) into 'toTag' or we can copy the val at 'fromTag' into this tag.",
                "toTag": "",
                "from": ""
            },
            "AND": [{
                "comment": "List of operators - operator 'parent' key doesn't matter"
            }],
            "OR": [{
                "comment": "List of operators - operator 'parent' key doesn't matter"
            }],
            "NOT": {
                "comment": "Operator"
            },
            "actionIfTrue": {
                "comment": "Can contain all the same objects as 'checks', plus 'comment' and 'action'",
                "operator": "INSERT"
            },
            "actionIfFalse": {
                "comment": "As above. TODO: Need to define what actions are likely.",
                "action": "REJECT"
            }
        }]
    },

    "(0020,0010)": {
        "myKey": "myValue"
    }
}